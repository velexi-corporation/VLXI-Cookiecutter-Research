[tool.poetry]
name = "{{ cookiecutter.package_name }}"
version = "0.0.0"
description = ""
license = "{% if cookiecutter.license == 'Apache License 2.0' %}Apache-2.0{% elif cookiecutter.license == 'BSD-3-Clause License' %}BSD-3-Clause{% elif cookiecutter.license == 'MIT License' %}MIT{% endif %}"
readme = "README.md"
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.email }}>"]

[tool.poetry.dependencies]
python = "{{ cookiecutter.python_version }}"
bcrypt = "^3.2.2"
dvc = {extras = ["all"], version = "^2.17"}
fastds = "^0,>=0.6"
ipython = "^8.4"
jupyterlab = "^3.4"
mlflow = "^1.27"
pdoc = "^12.2.0"
python-slugify = "^6.1"
PyYAML = ">=5.4"
tqdm = "^4.64"
typer = "^0,>=0.6"

# security vulnerability fixes
pywin32 = [
    { version = '>=301', platform = 'win32' },
]

[tool.poetry.group.code-quality.dependencies]
black = {extras = ["jupyter"], version = "^22.10.0"}
flake8 = "<5.0.0"  # Unpin after compatibility with pytest-flake8 is fixed
pre-commit = "^2.20.0"
radon = "^5.1"

[tool.poetry.group.test.dependencies]
coverage = "^6.4"
pylint = "^2.14"
pytest = "^7.2"
pytest-cov = "^3.0"
pytest-flake8 = "^1.1"
pytest-pylint = "^0,>=0.18"
pytest-xdist = "^2.5"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --doctest-modules --flake8 --cov --cov-report="
testpaths = [
    "src",
    "tests"
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ALLOW_UNICODE",
    "ALLOW_BYTES",
]
norecursedirs = ["data", "docs", "extras", "notebooks", "spikes"]

[tool.coverage.run]
source = ["src/"]

[tool.coverage.report]
omit = ["*/tests/*"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
